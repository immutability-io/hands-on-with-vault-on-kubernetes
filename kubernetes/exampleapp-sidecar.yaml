---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exampleapp-sidecar
  labels:
    app: exampleapp-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: exampleapp-sidecar
  template:
    metadata:
      labels:
        app: exampleapp-sidecar
    spec:
      volumes:
        - name: secrets
          emptyDir: {}
        - name: vault-token
          emptyDir:
            medium: Memory
        - name: certs
          secret:
            secretName: vault-tls
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000

      initContainers:
      - name: vault-authenticator
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        image: sethvargo/vault-kubernetes-authenticator:0.2.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        - name: certs
          readOnly: true
          mountPath: /vault/userconfig/vault-tls
        env:
        - name: VAULT_ADDR
          value: "https://vault.prod.svc.cluster.local"
        - name: VAULT_CACERT
          value: /vault/userconfig/vault-tls/ca.crt
        - name: VAULT_ROLE
          value: exampleapp-role

      containers:
      - name: consul-template
        image: hashicorp/consul-template:0.20.0-light
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        - name: certs
          readOnly: true
          mountPath: /vault/userconfig/vault-tls
        env:
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              name: vault-service-config
              key: endpoint
        - name: VAULT_CACERT
          value: /vault/userconfig/vault-tls/ca.crt
        - name: CT_LOCAL_CONFIG
          value: |
            vault {
              vault_agent_token_file = "/var/run/secrets/vaultproject.io/.vault-token"
              retry {
                backoff = "1s"
              }
            }
            template {
              contents = <<EOH
            {{- with secret "secret/data/exampleapp/config" }}
            {{ .Data.username }}={{ .Data.password }}
            {{ end }}
            EOH
              destination = "/etc/secrets/exampleapp"
              wait {
                min = "2s"
                max = "5s"
              }
            }

      - name: app
        image: anubhavmishra/exampleapp
        imagePullPolicy: Always
        env:
        - name: PORT
          value: "8080"
        - name: CONFIG_FILE
          value: "/etc/secrets/exampleapp"
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets